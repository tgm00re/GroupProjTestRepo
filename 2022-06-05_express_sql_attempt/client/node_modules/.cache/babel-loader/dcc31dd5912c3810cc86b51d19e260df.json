{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nieme\\\\Documents\\\\code\\\\GroupProjTestRepo\\\\2022-06-05_express_sql_attempt\\\\client\\\\src\\\\App.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport \"./App.css\";\nimport Home from \"./views/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // The debounce function receives our function as a parameter\n  const debounce = fn => {\n    // This holds the requestAnimationFrame reference, so we can cancel it if we wish\n    let frame; // The debounce function returns a new function that can receive a variable number of arguments\n\n    return function () {\n      for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n\n      // If the frame variable has been defined, clear it now, and queue for next frame\n      if (frame) {\n        cancelAnimationFrame(frame);\n      } // Queue our function call for the next frame\n\n\n      frame = requestAnimationFrame(() => {\n        // Call our function and pass any params we received\n        fn(...params);\n      });\n    };\n  }; // Reads out the scroll position and stores it in the data attribute\n  // so we can use it in our stylesheets\n\n\n  const storeScroll = () => {\n    document.documentElement.dataset.scroll = window.scrollY;\n  }; // Listen for new scroll events, here we debounce our `storeScroll` function\n\n\n  document.addEventListener('scroll', debounce(storeScroll), {\n    passive: true\n  }); // Update scroll position for first time\n\n  storeScroll();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Switch","Route","Link","BrowserRouter","useHistory","Home","App","debounce","fn","frame","params","cancelAnimationFrame","requestAnimationFrame","storeScroll","document","documentElement","dataset","scroll","window","scrollY","addEventListener","passive"],"sources":["C:/Users/nieme/Documents/code/GroupProjTestRepo/2022-06-05_express_sql_attempt/client/src/App.jsx"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useState } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport \"./App.css\";\r\nimport Home from \"./views/Home\";\r\n\r\n\r\nfunction App() {\r\n\r\n// The debounce function receives our function as a parameter\r\nconst debounce = (fn) => {\r\n\r\n  // This holds the requestAnimationFrame reference, so we can cancel it if we wish\r\n  let frame;\r\n\r\n  // The debounce function returns a new function that can receive a variable number of arguments\r\n  return (...params) => {\r\n    \r\n    // If the frame variable has been defined, clear it now, and queue for next frame\r\n    if (frame) { \r\n      cancelAnimationFrame(frame);\r\n    }\r\n\r\n    // Queue our function call for the next frame\r\n    frame = requestAnimationFrame(() => {\r\n      \r\n      // Call our function and pass any params we received\r\n      fn(...params);\r\n    });\r\n\r\n  } \r\n};\r\n\r\n\r\n// Reads out the scroll position and stores it in the data attribute\r\n// so we can use it in our stylesheets\r\nconst storeScroll = () => {\r\n  document.documentElement.dataset.scroll = window.scrollY;\r\n}\r\n\r\n// Listen for new scroll events, here we debounce our `storeScroll` function\r\ndocument.addEventListener('scroll', debounce(storeScroll), { passive: true });\r\n\r\n// Update scroll position for first time\r\nstoreScroll();\r\n\r\n\r\nreturn (\r\n  <div className=\"App\">\r\n      <Switch>\r\n          <Route exact path=\"/\">\r\n              <Home />\r\n          </Route>\r\n      </Switch>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAO,sCAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,kBAApC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,QAA2B,2CAA3B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAGA,SAASC,GAAT,GAAe;EAEf;EACA,MAAMC,QAAQ,GAAIC,EAAD,IAAQ;IAEvB;IACA,IAAIC,KAAJ,CAHuB,CAKvB;;IACA,OAAO,YAAe;MAAA,kCAAXC,MAAW;QAAXA,MAAW;MAAA;;MAEpB;MACA,IAAID,KAAJ,EAAW;QACTE,oBAAoB,CAACF,KAAD,CAApB;MACD,CALmB,CAOpB;;;MACAA,KAAK,GAAGG,qBAAqB,CAAC,MAAM;QAElC;QACAJ,EAAE,CAAC,GAAGE,MAAJ,CAAF;MACD,CAJ4B,CAA7B;IAMD,CAdD;EAeD,CArBD,CAHe,CA2Bf;EACA;;;EACA,MAAMG,WAAW,GAAG,MAAM;IACxBC,QAAQ,CAACC,eAAT,CAAyBC,OAAzB,CAAiCC,MAAjC,GAA0CC,MAAM,CAACC,OAAjD;EACD,CAFD,CA7Be,CAiCf;;;EACAL,QAAQ,CAACM,gBAAT,CAA0B,QAA1B,EAAoCb,QAAQ,CAACM,WAAD,CAA5C,EAA2D;IAAEQ,OAAO,EAAE;EAAX,CAA3D,EAlCe,CAoCf;;EACAR,WAAW;EAGX,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI,QAAC,MAAD;MAAA,uBACI,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAa,IAAI,EAAC,GAAlB;QAAA,uBACI,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AASC;;KAjDQP,G;AAmDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}